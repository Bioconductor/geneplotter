%
% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
%
% \VignetteIndexEntry{byChroms HowTo}
% \VignetteAuthor{R. Gentleman}
%\VignetteDepends{annotate, hu6800}
%\VignetteKeywords{chromosomes}
%\VignettePackage{geneplotter}
\documentclass[12pt]{article}

\usepackage{amsmath,pstricks}
\usepackage[authoryear,round]{natbib}
\usepackage{hyperref}

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}


\textwidth=6.2in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}

\bibliographystyle{plainnat}

\begin{document}

\section*{How to Assemble a chromLocation Object}


In order to use the various \Rpackage{geneplotter} functions you will
need to assemble an object of class \Robject{chromLocation}.
This is relatively straightforward if you have access to a Bioconductor
data package. In this example we will consider using the
\Rpackage{hu6800} data package to construct our object.

<<loaddata>>=

 library("annotate")
 library("hu6800")
 affy <- ls(env=hu6800CHR)

 chrs <- mget(affy, env=hu6800CHR)

 ##check to see if these are well behaved
 lens<-sapply(chrs,length)
 table(lens)
 chrs[lens==2]

@
So somehow nine of the genes are mapped to two different chromosomes.
We really should sort that out, but for now we can just put them all
on the X chromosome (they are all X,Y).
Based on OMIM the these genes
are localized to the so called \textit{pseudoautosomal region} where
the X and Y cromosomes are similar and there is actual recombination going on
between them.

<<fixdata>>=
chrs2 <- sapply(chrs, function(x) x[1])
chrs2 <- factor(chrs2)
length(chrs2)
 table(unlist(chrs2))
@

Now we are ready to obtain the chromosome location data and orientation.
The chromosome location data tells us the (approximate) location of
the gene on the chromosome with distance taken from the
%%FIXME:
%which end is it now)?
Chromosomes are double stranded and the gene is encoded on only one of
those two strands. The strands are labeled plus and minus (sense and
                                                           antisense).
We use both the location and the orientation when making plots.
%%FIXME:
%Someone needs to check to see if the distance is from the same end
%for both strands

<<strandloc>>=

 strand <- mget(affy, env=hu6800CHRLOC)

 splits <- split(strand, chrs2)
 length(splits)
 names(splits)

@

Now we have processed the data and are ready to construct a new
\Robject{chromLocation} object.

<<chrloc>>=

 newChrClass <- buildChromLocation("hu6800")

@

And finally we can test it by calling \Rfunction{cPlot}.

<<cPlot, fig=TRUE>>=

  library(geneplotter)

  cPlot(newChrClass)

@

\end{document}
